{
  "presentations": [
    {
      "time": "1:00 PM - 1:15 PM",
      "projectId": "csse-1-100",
      "title": "Avionics Algorithm and Data Workflow Optimization",
      "studentName": "Emma Pates",
      "studentMajor": "CSSE",
      "projectType": "Internship or job opportunity",
      "facultyAdvisor": " Dr. Jeffrey Kim",
      "section": 1,
      "poster": "./posters/csse/patesemma_4138241_127900522_Algorthim Analysis @ Dynon Avionics Presenter Emma Pates, CSSE  Advisor Dr. Jeffery Kim  Sponsor Dynon Avionics  Autumn 2024.png",
      "abstract": "Dynon Avionics is best known for its glass cockpit solutions, which replace traditional analog gauges with digital displays. My internship at Dynon focused on analyzing and enhancing an outdated algorithm used in one of their aviation electronic (avionics) systems for experimental and light sport aircraft. The algorithm combines processed sensor data to calculate information about the aircraft, even in conditions where external references are not usable. The project's purpose was to determine how well a new algorithm performs based on a truth system and improve the performance if it does not match the correct values. My primary technical responsibility was overseeing the analysis of the algorithm to ensure that the system met regulatory compliance and performance benchmarks. My secondary technical responsibility was leading the algorithm-corrected data analysis tools design and implementation.\n\n To achieve these goals, I developed a modular and flexible Python-based data analysis workflow capable of handling various sensor combinations and datasets. This included integrating tools for preprocessing, synchronizing sensor data, and visualizing performance metrics. I also explored the behavior of the complex algorithm by stepping through its execution with a debugger, experimenting with its tunable parameters, adding diagnostic data to its output, and comparing outputs against a truth system installed in the test aircraft.\n\n The resulting analysis tools now support two operational modes. Flight data can be analyzed whether it is run through the algorithm simulation or not to allow for more options during analysis. The tools can also process data from all relevant sensors and products. They also include features such as merging and time synchronization for disparate data sources. My contributions to the algorithm's analysis revealed key findings, such as the algorithm's dependency on specific sensors for optimal performance and its limitations in high-wind scenarios. There is still a lot to evaluate, but these discoveries have laid the groundwork for further research and refinements to improve the algorithm's robustness and reliability."
    },
    {
      "time": "1:15 PM - 1:30 PM",
      "projectId": "csse-1-115",
      "title": "Tempo: Organize Your Creativity",
      "studentName": "Matt Taniguchi",
      "studentMajor": "CSSE",
      "projectType": "Individual project",
      "facultyAdvisor": " Dr. Jeffrey Kim",
      "section": 1,
      "poster": "./posters/csse/taniguchimatt_4002464_127863196_Matt Taniguchi Poster.jpg",
      "abstract": "During my time in CSS 497, I developed Tempo, a desktop application that aims to enhance collaboration and version management for music producers. I developed Tempo as an individual project.\n\n I developed Tempo using Rust, Tauri and React. I chose Rust since I wanted a flexible, performant language. Tauri and React were natural choices, since I needed tools to develop a cross-platform graphical user interface for Tempo.\n\n Tempo aims to address pain points within two areas for music producers: collaborative workflows and version management.\n\n One major pain point is broken file/plugin references in project files. Broken references complicate producers’ collaborative workflows. Tempo contains features which help producers avoid broken references. Implementing these features required some reverse engineering, which was an interesting challenge.\n\n Producers have to manage project files manually using file explorers, which can be extremely tedious. To address this, Tempo implements a version management system based off a chat interface: to establish a parent-child relationship between two project files, a producer simply “replies” to the parent version with the new, modified child version. This interface aims to be intuitive and work well for individual use and for collaborative use.\n\n As far as I know, Tempo is a novel tool, and no other tool like it currently exists. I hope that Tempo gains real-world users, or at the very least pushes digital audio workstation (DAW) developers towards implementing collaboration/version management features in their DAWs.\n\n Tempo was successfully completed and released publicly, addressing key challenges in music production workflows based on initial testing.\n\n My initial goal for Tempo was to create a Git for music producers. I have made significant progress towards achieving this goal. I continue to work on refining Tempo."
    },
    {
      "time": "1:30 PM - 1:45 PM",
      "projectId": "csse-1-130",
      "title": "Putting “Social” Into Social Media",
      "studentName": "Karsten Schmidt ",
      "studentMajor": "CSSE",
      "projectType": "Individual project",
      "facultyAdvisor": " Dr. Jeffrey Kim",
      "section": 1,
      "poster": "./posters/csse/schmidtkarstenbrian_4103419_127793130_PrintingFinalPosterUpload.jpg",
      "abstract": "For my Capstone project I designed, implemented and tested a social media iOS app, dubbed Toppicly. The primary problem that inspired this app was that over 5 billion people around the globe are using Social Media, and issues such as “doomscrolling” and social media addiction are becoming more widespread. The name of this project, Putting “Social” Into Social Media, encapsulates my mission while creating this app. Toppicly provides a unique set of features designed to encourage collaboration and exploring the world around us rather than doomscrolling on our phone. \n\n Over the course of the summer and autumn quarters, I designed, developed, refined, and tested the features included within Toppicly. Toppicly is developed primarily with Swift, and JavaScript with Firebase as the database. Swift was a powerful language which allowed me to build a UI which is aesthetically pleasing, simple to navigate, and efficiently displays all data to users. The app uses Swift function calls to send and receive data, integrated with Firebase libraries, to communicate with the database. I was able to seamlessly integrate my app with Firebase Firestore, Storage, Cloud Functions and Authentication. \n\n The primary features I developed for this project were: Friends, Groups, Topics and the Photo Library. The Friend’s feature is similar to those commonly found on other social media platforms. The Groups feature allows users to add friends to groups and collaborate on custom topics, posting as many images as they wanted, and post captions or comments. The Topics feature is a global collaboration event, where a topic, such as a “Sunset”, is available for all users to capture an image of and post to. Users can then see all images posted on this topic. All of this is possible through the Photo Library, which only allows images taken with the app, and is the key to encouraging users to go out into the world and capture the image posted to the topic. \n\n Toppicly offers users a unique approach to social media that is more about the world around them than the device. Preliminary user testing, stakeholder, and expert feedback indicates that those who use this platform found this approach to be a charming and unique and did motivate them to capture images of the world around them. Toppicly will continue to strive towards the mission of countering doomscrolling and social media addiction to promote further exploration of nature and social interaction beyond just the device. "
    },
    {
      "time": "1:45 PM - 2:00 PM",
      "projectId": "csse-1-145",
      "title": "Developing a Mobile Game: Cyrelix Racing",
      "studentName": "Matthew Campbell",
      "studentMajor": "CSSE",
      "projectType": "Individual project",
      "facultyAdvisor": " Dr. Jeffrey Kim",
      "section": 1,
      "poster": "./posters/csse/campbellmatthew_3676042_127917620_CAPSTONE POSTER - MATTY CAMPBELL.jpg",
      "abstract": "Cyrelix Racing is an arcade-style mobile racing game that features engaging gameplay mechanics paired with extensive logical systems like vehicle modification and profile customization. Inspired by my passion for gaming paired with my strong dissatisfaction regarding the current gaming industry’s shift towards complete focus on abusive profit-driven practices, this project prioritizes fun and enticing gameplay at its core, as well as ethical monetization practices, to ensure fairness and fun remain central to the player experience. \n\n The creation process for Cyrelix Racing included extensive ideation, detailed design documentation, and the development of robust and secure system architecture. Utilizing Unreal Engine, AWS, and my VPS as a web host, the game and online platform were built iteratively, incorporating valuable feedback from stakeholders, experts, and play testers for quality refinement. Major features such as real-time multiplayer, scalable backend systems, the companion online platform, and extensive meta game systems were implemented to ensure the game met both technical and user-focused goals. The result is a fully functional prototype that demonstrates all the previously mentioned features, focusing on quality, competitive gameplay while maintaining fairness and accessibility. During the development process, some challenges arose such as optimizing multiplayer networking, designing balanced gameplay systems, and integrating secure backend structures. These issues were resolved through a trial-and-error process involving strategic problem-solving and adaptive methodologies.\n\n This project is significant as it highlights the necessity for creating video games that are innovative, fun, and ethically sound without complete reliance on transactional experiences, offering a large source of the user market a model for balancing player enjoyment with sustainable business practices. Through this Capstone experience, I have honed my project development skills and technical abilities, preparing me to address complex challenges in future professional settings. As a result, my work has culminated into a polished game that reflects my commitment to creating a fun, quality, and fair gaming experience, and Cyrelix Racing stands as a testament to the importance of user-centric design and the impact of fostering a fair and immersive gaming experience. "
    },
    {
      "time": "2:00 PM - 2:25 PM",
      "projectId": "csse-1-200",
      "title": "",
      "studentName": "Sean-Luc Ghim\n\nKhoa Tra\n\nReagan Hoang Vu",
      "studentMajor": "CSSE\n\nCSSE\n\nCSSE",
      "projectType": "Group project",
      "facultyAdvisor": " Dr. Jeffrey Kim",
      "section": 1,
      "poster": "./posters/csse/ghimseanluc_4261926_127918874_css497-capstone-final-poster-ebbp.png",
      "abstract": "Sean-Luc Ghim\n\n EvenBabiesBuildPCs (EBBP)\n\n Capstone Abstract\n\n EvenBabiesBuildPCs (EBBP) is a web application designed to assist users in building personal computers that successfully pass the Power-On Self-Test (POST)—a series of diagnostic checks performed when a computer powers on. This project aims to address the fragmented resources available for PC building by providing a centralized platform where users of all experience levels can explore, learn, and experiment with PC hardware. The platform is especially tailored for novice builders, offering an intuitive learning curve.\n\n The backend development centers on enabling users to virtually assemble PCs with fully compatible components. MySQL, a relational database management system, was utilized to store PC parts, leveraging relational cardinalities to manage multivalued data (e.g., motherboards and their memory speeds, or CPU coolers and their compatible sockets). Sequelize was used to design the database schema, run migrations, and populate the server via seeders/seed scripts. To populate the database, PyPartPicker (a web-scraping API for extracting data from PCPartPicker.com) was used to create scripts and generate CSV files from scraped data, which were then bulk inserted from the seed scripts.\n\n With a database of over 2,000 PC parts, EBBP organizes these components into seven product categories: CPUs, Motherboards, Memory (RAM), Storage, Video Cards, CPU Coolers, and Power Supply Units. Users can browse these categories through dedicated product pages, selecting parts of their choice, which are then added to the PC Workshop page.\n\n The PC Workshop features a dynamic compatibility checker that evaluates whether the selected components are compatible, have potential issues, or are outright incompatible. If an issue or incompatibility is detected, the checker provides specific feedback, identifying the problematic components and the nature of the conflict. This ensures users can confidently plan and refine their PC builds.\n\n\n Khoa Tra\n\n EvenBabiesBuildPCs\n\n Capstone Abstract\n\n EvenBabiesBuildPCs (EBBP) is a web application that simplifies the process of building custom PCs by providing an intuitive platform for users to search for components, save mock builds, and learn about hardware. The project addresses the fragmented nature of PC-building resources by integrating a workshop space for mock PC building, educational guides, and a secure account management system into one cohesive application.\n\n The backend development focused on creating and managing a robust account system to support user profiles, data storage, and authentication. Built using Node.js and Firebase, the backend enables seamless interaction between the frontend and the database. Features such as account creation, login/logout functionality, and secure profile management were developed to provide users with a personalized experience. Special attention was given to ensuring data security through the use of encrypted authentication protocols, allowing users to safely store and manage up to five mock PC builds.\n\n The backend also supports real-time data retrieval and updates for component availability, ensuring users always have access to the latest hardware options from online retailers. This involved designing scalable database schemas and implementing efficient data-handling techniques to maintain fast and reliable system performance, with response times consistently under 300 milliseconds.\n\n Our project highlights the critical role backend systems play in creating secure, scalable, and user-friendly applications. By enabling real-time updates, robust data management, alongside compatible integration with frontend systems, the backend ensures a reliable and dynamic platform for users of all experience levels. The account system, in particular, underscores the importance of personalization and security in modern web applications, aligning with industry standards for user-centered design and development. \n\n\n"
    },
    {
      "time": "2:25 PM - 2:45 PM",
      "projectId": "csse-1-225",
      "title": "Intelligent Personal Assistant ",
      "studentName": "George Bau Vu\n\nFang Wu",
      "studentMajor": "CSSE\n\nCSSE",
      "projectType": "Group Project",
      "facultyAdvisor": " Dr. Jeffrey Kim",
      "section": 1,
      "poster": "./posters/csse/vugeorgebau_4260870_127600249_IntelliSync Poster.png",
      "abstract": "George Bau\n\nThis report highlights the development of the front-end for an Intelligent Personal Assistant (IPA) mobile application, built using Swift for iOS. The application is designed to enhance task management and scheduling through both manual input and voice commands. It offers users a seamless way to create, update, delete, and view reminders, while integrating real-time weather and temperature updates for task locations using OpenWeather’s API. The app’s front-end prioritizes user experience by implementing intuitive navigation, responsive design, and interactive components that streamline task management.The purpose of this development was to address the growing demand for intelligent and user-friendly task management tools that improve productivity and convenience. The integration of voice functionality, powered by OpenAI’s natural language processing capabilities, allows users to interact with the app naturally, providing a more personalized and efficient experience. This feature enhances accessibility by enabling hands-free task creation and real-time updates on weather conditions, making the app particularly valuable for on-the-go users.The front-end ensures smooth communication with a robust Python and Django-based backend hosted on Microsoft Azure. The backend handles user authentication, database operations, and API integrations, ensuring secure and efficient data processing. The result is a fully functional, interactive, and intelligent task management tool that showcases the potential of modern technologies to create seamless user experiences.The significance of this project lies in its demonstration of how thoughtful front-end development can elevate usability and satisfaction in mobile applications. By combining advanced technologies such as natural language processing, real-time data integration, and responsive design, this project serves as a model for creating intelligent, user-centered solutions that enhance everyday productivity.\n\n\n Fang Wu\n\n The Intelligent Personal Assistant (IPA) project focuses on developing a mobile application designed to help users efficiently manage tasks and schedules. The app enables users to schedule reminders through manual entry or voice input, with voice commands also providing weather and temperature updates for the task location. The backend handles user authentication, task management (create, update, delete, list), and integrates with APIs for location and weather services. Location data is stored by calling OpenWeather’s Geocoding API, while weather information is retrieved based on the date and time extracted from user voice commands using OpenAI’s natural language processing API. Both manual and voice-created reminders are saved to a MySQL database hosted on Microsoft Azure, where the backend server is also deployed. The app also provides intelligent schedule recommendations based on user behavior and contextual data, enhancing task management efficiency.\n\n The purpose of this project is to address common challenges like forgetfulness in setting reminders and the lack of contextual information, such as weather conditions, when scheduling tasks. And the need for intelligent schedule recommendations based on user behavior and preferences.\n\n During development, secure user authentication was implemented using Django’s built-in mechanisms and session-based authentication. Additionally, backend API endpoints were created to facilitate task creation, storage, and retrieval. Communication between the backend and the Swift-based iOS frontend ensures seamless user interactions.\n\n The result is a functional prototype that successfully schedules tasks, retrieves weather data, and confirms actions via natural language responses.\n\n This project is significant because it demonstrates the practical integration of AI-powered language processing, cloud-based infrastructure, and mobile development to solve everyday task management challenges. For my own reflection, I have developed a deeper understanding of end-to-end application development, including how to design, test, deploy, and document a project effectively. These skills are essential for any software developer and will serve as a strong foundation for future projects. Additionally, learning to adapt quickly to new tools and troubleshoot real-world issues has prepared me for a professional environment. "
    },
    {
      "time": "2:45 PM - 3:00 PM",
      "projectId": "csse-1-245",
      "title": "Bridging the Gap Between Data Engineering and Business Insights",
      "studentName": "Daniil Marozau",
      "studentMajor": "CSSE",
      "projectType": "Internship or job opportunity",
      "facultyAdvisor": "Dr. Johnny Lin",
      "section": 1,
      "poster": "./posters/csse/marozaudaniil_4326337_127889604_Poster_Marozau_Daniil.jpg",
      "abstract": "Bridging the Gap Between Data Engineering and Business Insights by Marozau Daniil Faculty adviser: Dr. Johnny Lin During my internship as a Junior Business Intelligence Engineer at Amazon, I worked on enhancing the reliability, scalability, and automation of data for the Amazon Ads Partner Network. The internship focused on solving the problem of handling large-scale, multi-sourced data. I completed several projects to address these issues, including building and owning scalable back-end data models, creating automated ETL data pipelines, and crafting visual dashboards to deliver important business insights to internal stakeholders.\n\n The primary task of the data modeling project was to develop and optimize the back-end processes for an internal rule-based tool used in managing partners, a very critical component of Amazon's advertising ecosystem. This project was, therefore, born out of the necessity for consistency and accessibility of data in a high-volume environment where manual processes result in inefficiencies and frequent errors. My work included planning, designing, implementing, and testing a scalable data model that takes various data sources needed for the requirements and delivers them to the software development team for future use. Using the best data modeling techniques and internal tools, I was able to deliver results. A key feature of my contribution was redesigning data models to improve processing efficiency and scalability. \n\n Another task was to build efficient automated pipelines for data delivery. To minimize manual effort and maximize reliability in delivering both analytical and production data, I built various ETL pipelines that laid the foundation for future data models. These models formed the basis for the dashboards I created, which visualized key metrics and trends for stakeholders. These provided actionable insights, thereby enhancing the decision-making process. Additionally, I worked with cross-functional teams to understand the greater business context and align technical solutions with operational needs.\n\n The results were immense. With automation pipelines in place, I successfully reduced processing times, and errors in data output were minimal. The data models greatly improved scalability, ensuring no major rewrite of systems for future growth. These dashboards, therefore, empower stakeholders with better visibility into operational data to effectively drive correct decisions. My work not only addressed immediate challenges but also laid the groundwork for sustainable, scalable solutions in Amazon's data ecosystem.\n\n This internship experience underscored the need for adaptability and problem-solving in fast-paced, data-focused settings, stressing engineering's vital role in enhancing efficiency and fostering innovation."
    },
    {
      "time": "3:00 PM - 3:15 PM",
      "projectId": "csse-1-300",
      "title": "Streamlining UX with Computer Vision Solutions",
      "studentName": "Ajay Vegiraju",
      "studentMajor": "CSSE",
      "projectType": "Internship or job opportunity",
      "facultyAdvisor": "Dr. Johnny Lin",
      "section": 1,
      "poster": "./posters/csse/vegirajuajay_4131109_127906021_Poster Final Draft-min.png",
      "abstract": "During my internship at People Tech Group, I worked on various components of GeoParking’s platform, a startup initiative aimed at automating parking space reservations for robotaxis. My primary responsibility was to develop an AI-driven feature for automated parking spot detection using satellite images. Additionally, I contributed to building and refining features such as the MapDashboard, scheduling functionality, and user interface components like the landing page. My tasks also included integrating these features with cloud services, resolving bugs, and optimizing the platform for real-time usability.\n\n The purpose of this project was to simplify parking lot management for property owners, enabling them to monetize unused parking spaces by listing them for robotaxi operations. With growing demand in markets like San Francisco and Phoenix, the automation of parking spot detection was essential to reduce manual effort and improve efficiency, aligning with GeoParking’s mission of streamlining parking space reservations.\n\n The project delivered a scalable, real-time solution that automated parking spot detection through the YOLO-NAS model. This feature was integrated into GeoParking’s platform, providing property owners with an intuitive and efficient tool for parking space management. Other significant outcomes included an enhanced MapDashboard integrated with Cosmos DB, a new calendar component for scheduling, and improved UI/UX designs. The deployment on Azure infrastructure ensured high availability and scalability of the solution.\n\n This work represents a significant step in leveraging AI and cloud technologies to modernize parking lot management for the robotaxi market. The integration of advanced AI models, coupled with dynamic image processing and geolocation mapping, highlights the potential of machine learning to solve real-world problems. Additionally, the improvements made to GeoParking’s platform enhanced its user experience and functionality, making it a more robust tool for property owners.\n\n This internship provided a comprehensive experience, from developing and deploying AI models to collaborating on full-stack solutions and cloud infrastructure. The successful outcomes of this project not only addressed the specific needs of GeoParking’s platform but also contributed to my personal growth in AI, cloud computing, and software development. The project has laid a foundation for future enhancements, such as real-time video feed integration and global scalability."
    },
    {
      "time": "3:15 PM - 3:30 PM",
      "projectId": "csse-1-315",
      "title": "VAX Translate",
      "studentName": "Bizho Luo",
      "studentMajor": "CSSE",
      "projectType": "Faculty Research",
      "facultyAdvisor": "Dr. William Erdly",
      "section": 1,
      "poster": "./posters/csse/Bizhou Luo poster VAX Translate_page-0001.jpg",
      "abstract": "Bizhou Luo\n\n VAX Translate \n\n The VAX Translate project addresses the challenges of manually translating and integrating immunization records for immigrants, overseas students, and health officials. By leveraging advanced technologies such as OCR (Optical Character Recognition) and translation APIs, the system automates the translation of multilingual immunization records into English and integrates them directly into health information systems like the Washington Immunization Information System (WAIIS). \n\n The project is designed to streamline workflows, reduce errors, and save time for stakeholders. Key features include accurate text extraction, side-by-side translation displays for user verification, and secure data handling to meet compliance standards such as HIPAA and HL7. Iterative testing and usability evaluations have guided development, ensuring the system meets the diverse needs of its users while addressing challenges in translation accuracy, processing delays, and system integration. \n\n Future goals include refining user interface designs, optimizing translation efficiency, and deploying the system in public health and school district environments to support effective immunization record management across diverse populations."
    }
  ]
}